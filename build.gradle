plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
	id "me.modmuss50.mod-publish-plugin" version "0.8.1"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url "https://maven.shedaniel.me" }

	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven { url = 'https://maven.minecraftforge.net/' }
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven { url "https://maven.terraformersmc.com/releases/" }
}

loom {
	runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=mushrooomsmod"

			runDir "build/datagen"
		}
	}
}

// Add the generated resources to the main source set
sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation 'com.github.glitchfiend:TerraBlender-fabric:1.21-4.0.0.1'

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	modImplementation 'software.bernie.geckolib:geckolib-fabric-1.21:4.5.6'

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:16.0.729"
	modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:16.0.729"

	modApi("me.shedaniel.cloth:cloth-config-fabric:15.0.127"){
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "dev.architectury:architectury-fabric:13.0.3"


	modImplementation 'maven.modrinth:ewc:2.3.4-1.21'


	modApi "com.terraformersmc:modmenu:11.0.1"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishMods {
	file = remapJar.archiveFile

	changelog = file("changelog.md").text

	modLoaders.add("fabric")
	modLoaders.add("quilt")
	curseforge {
		accessToken = getApiKey()["CURSEFORGE_API_KEY"]
		minecraftVersionRange {
			start = "1.21"
			end = "1.21.1"
		}
		projectId = "955698"
		javaVersions.add(JavaVersion.VERSION_17)
		serverRequired = true
		requires("fabric-api")
		changelogType = "markdown"
	}

	modrinth {
		accessToken = getApiKey()["MODRINTH_API_KEY"]
		minecraftVersionRange {
			start = "1.21"
			end = "1.21.1"
		}
		projectId = "hxHbPoS6"
		requires("fabric-api")
		type = ALPHA
	}
}

static def getApiKey() {
	def Properties props = new Properties()
	props.load(new FileInputStream(new File('api.properties')))
	return props
}